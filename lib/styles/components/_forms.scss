/*-------------------------------------------

   	Forms

   	Table of Contents:

   	1. Basic Form Fields
   	2. Custom Forms

-------------------------------------------*/


/* !  BASIC FORMS
   ------------------------------------------------------------------------------------------------------*/


//
// Form Variables
//

// We use this to set the base for lots of form spacing and positioning styles
$form-spacing:                       emCalc(16px) !default;

// We use these to style the labels in different ways
$form-label-pointer:                 pointer !default;
$form-label-font-size:               emCalc(14px) !default;
$form-label-font-weight:             500 !default;
$form-label-font-color:              lighten(#000, 30%) !default;
$form-label-bottom-margin:           emCalc(3px) !default;
$input-font-family:                  inherit !default;
$input-font-color:                   rgba(0,0,0,0.75) !default;
$input-font-size:                    emCalc(14px) !default;
$input-bg-color:                     #fff !default;
$input-focus-bg-color:               darken(#fff, 2%) !default;
$input-border-color:                 darken(#fff, 20%) !default;
$input-focus-border-color:           darken(#fff, 40%) !default;
$input-border-style:                 solid !default;
$input-border-width:                 1px !default;
$input-disabled-bg:                  #ddd !default;
$input-box-shadow:                   inset 0 1px 2px rgba(0,0,0,0.1) !default;

$alert-color:			red;

// We use these to style the fieldset border and spacing.
$fieldset-border-style:              solid !default;
$fieldset-border-width:              1px !default;
$fieldset-border-color:              #ddd !default;
$fieldset-padding:                   emCalc(20px) !default;
$fieldset-margin:                    emCalc(18px) 0 !default;

// We use these to style the legends when you use them
$legend-bg:                          #fff !default;
$legend-font-weight:                 bold !default;
$legend-padding:                     0 emCalc(3px) !default;

// We use these to style the prefix and postfix input elements
$input-prefix-bg:                    darken(#fff, 5%) !default;
$input-prefix-border-color:          darken(#fff, 20%) !default;
$input-prefix-border-size:           1px !default;
$input-prefix-border-type:           solid !default;
$input-prefix-overflow:              hidden !default;
$input-prefix-font-color:            #333 !default;
$input-prefix-font-color-alt:        #fff !default;

// We use these to style the error states for inputs and labels
$input-error-message-padding:        emCalc(6px) emCalc(4px) !default;
$input-error-message-top:            -($form-spacing) - emCalc(5px) !default;
$input-error-message-font-size:      emCalc(12px) !default;
$input-error-message-font-weight:    bold !default;
$input-error-message-font-color:     #fff !default;
$input-error-message-font-color-alt: #333 !default;

//We use this to style the glowing effect of inputs when focused
$glowing-effect-fade-time:           0.45s !default;
$glowing-effect-color:               $input-focus-border-color !default;

//
// Form Mixins
//

// We use this mixin to give us form styles for rows inside of forms
@mixin form-row-base {
  .row { margin: 0 ((-$form-spacing) / 2);

    .column,
    .columns { padding: 0 $form-spacing / 2; }

    // Use this to collapse the margins of a form row
    &.collapse { margin: 0;

      .column,
      .columns { padding: 0; }

    }
  }
  input.column,
  input.columns,
  textarea.column,
  textarea.columns { padding-left: $form-spacing / 2; }
}

// We use this mixin to give all basic form elements their style
@mixin form-element() {
  background-color: $input-bg-color;
  font-family: $input-font-family;
  border: $input-border-width $input-border-style $input-border-color;
  -webkit-box-shadow: $input-box-shadow;
  box-shadow: $input-box-shadow;
  color: $input-font-color;
  display: block;
  font-size: $input-font-size;
  margin: 0 0 $form-spacing 0;
  padding: $form-spacing / 2;
  height: emCalc(13px) + ($form-spacing * 1.5);
  width: 100%;
  @include box-sizing(border-box);
  // Basic focus styles
  &:focus {
    background: $input-focus-bg-color;
    border-color: $input-focus-border-color;
    outline: none;
  }

  // Disabled background input background color
  &[disabled] { background-color: $input-disabled-bg; }
}

// We use this mixin to create form labels
@mixin form-label($alignment:false, $base-style:true) {

  // Control whether or not the base styles come through.
  @if $base-style {
    font-size: $form-label-font-size;
    color: $form-label-font-color;
    cursor: $form-label-pointer;
    display: block;
    font-weight: $form-label-font-weight;
    margin-bottom: $form-label-bottom-margin;
  }

  // Alignment options
  @if $alignment == right {
    float: none;
    text-align: right;
  }
  @else if $alignment == inline {
    margin: 0 0 $form-spacing 0;
    padding: $form-spacing / 2 + emCalc($input-border-width * 2) 0;
  }
}

// We use this mixin to create postfix/prefix form Labels
@mixin prefix-postfix-base {
  display: block;
  position: relative;
  z-index: 2;
  text-align: center;
  width: 100%;
  padding-top: 0;
  padding-bottom: 0;
  border-style: $input-prefix-border-type;
  border-width: $input-prefix-border-size;
  overflow: $input-prefix-overflow;
  font-size: $form-label-font-size;
  height: ($form-label-font-size + ($form-spacing * 1.5) - emCalc(1px));
  line-height: ($form-label-font-size + ($form-spacing * 1.5) - emCalc(1px));
}

// We use this mixin to create prefix label styles
@mixin prefix($bg:$input-prefix-bg,$is-button:false) {

  @if $bg {
    $bg-lightness: lightness($bg);
    background: $bg;
    border-color: darken($bg, 10%);
    border-right: none;

    // Control the font color based on background brightness
    @if $bg-lightness > 70% or $bg == yellow { color: $input-prefix-font-color; }
    @else { color: $input-prefix-font-color-alt; }
  }

  @if $is-button {
    padding-left: 0;
    padding-right: 0;
    padding-top: 0;
    padding-bottom: 0;
    text-align: center;
    line-height: emCalc(34px);
  }

}

// We use this mixin to create postfix label styles
@mixin postfix($bg:$input-prefix-bg, $is-button:false) {

  @if $bg {
    $bg-lightness: lightness($bg);
    background: $bg;
    border-color: darken($bg, 15%);
    border-left: none;

    // Control the font color based on background brightness
    @if $bg-lightness > 70%  or $bg == yellow { color: $input-prefix-font-color; }
    @else { color: $input-prefix-font-color-alt; }
  }

  @if $is-button {
    padding-left: 0;
    padding-right: 0;
    padding-top: 0;
    padding-bottom: 0;
    text-align: center;
    line-height: emCalc(34px);
  }

}

// We use this mixin to style fieldsets
@mixin fieldset {
  border: $fieldset-border-style $fieldset-border-width $fieldset-border-color;
  padding: $fieldset-padding;
  margin: $fieldset-margin;

  // and legend styles
  legend {
    font-weight: $legend-font-weight;
    background: $legend-bg;
    padding: $legend-padding;
    margin: 0;
    margin-left: emCalc(-3px);
  }
}

// We use this mixin to control border and background color of error inputs
@mixin form-error-color($color:$alert-color) {
  border-color: $color;
  background-color: rgba($color, 0.1);

  // Go back to normal on focus
  &:focus {
    background: $input-focus-bg-color;
    border-color: $input-focus-border-color;
  }
}

// We use this simple mixin to style labels for error inputs
@mixin form-label-error-color($color:$alert-color) { color: $color; }

// We use this mixin to create error message styles
@mixin form-error-message($bg:$alert-color) {
  display: block;
  padding: $input-error-message-padding;
  margin-top: $input-error-message-top;
  margin-bottom: $form-spacing;
  font-size: $input-error-message-font-size;
  font-weight: $input-error-message-font-weight;

  // We can control the text color based on the brightness of the background.
  $bg-lightness: lightness($bg);
  background: $bg;
  @if $bg-lightness < 70% or $bg == yellow { color: $input-error-message-font-color; }
  @else { color: $input-error-message-font-color-alt; }
}

// Only include these classes if the variable is true, otherwise they'll be left out.
	/* Standard Forms */
  form { margin: 0 0 $form-spacing; }

  /* Using forms within rows, we need to set some defaults */
  form .row { @include form-row-base; }

  /* Label Styles */
  label { @include form-label;
    &.right { @include form-label(right,false); }
    &.inline { @include form-label(inline,false); }
  }

  /* Attach elements to the beginning or end of an input */
  .prefix,
  .postfix { @include prefix-postfix-base; }


  /* We use this to get basic styling on all basic form elements */
  input[type="text"],
  input[type="password"],
  input[type="date"],
  input[type="datetime"],
  input[type="datetime-local"],
  input[type="month"],
  input[type="week"],
  input[type="email"],
  input[type="number"],
  input[type="search"],
  input[type="tel"],
  input[type="time"],
  input[type="url"],
  textarea {
    @include form-element;
  }

  /* Adjust margin for form elements below */
  input[type="file"],
  input[type="checkbox"],
  input[type="radio"],
  select {
    margin: 0 0 $form-spacing 0;
  }

  /* Normalize file input width */
  input[type="file"] {
    width:100%;
  }

  /* We add basic fieldset styling */
  fieldset {
    @include fieldset;
  }

  /* Error Handling */
  .error input,
  input.error,
  .error textarea,
  textarea.error {
    @include form-error-color;
  }

  .error label,
  label.error { @include form-label-error-color; }

  .error small,
  small.error {
    @include form-error-message;
  }



/* ==========================================================================
	!  	3. Prefixes and Postfixes: Attach elements to the beginning or end of an input
	========================================================================== */

.prefix {
	display: block;
	position: relative;
	z-index: 2;
	text-align: center;
	width: 100%;
	padding-top: 0;
	padding-bottom: 0;
	border-style: solid;
	border-width: 1px;
	overflow: hidden;
	font-size: 0.875em;
	height: 2.3125em;
	line-height: 2.3125em;
	&.button {
		padding-left: 0;
		padding-right: 0;
		padding-top: 0;
		padding-bottom: 0;
		text-align: center;
		line-height: 2.125em;
	}
}

.postfix {
	display: block;
	position: relative;
	z-index: 2;
	text-align: center;
	width: 100%;
	padding-top: 0;
	padding-bottom: 0;
	border-style: solid;
	border-width: 1px;
	overflow: hidden;
	font-size: 0.875em;
	height: 2.3125em;
	line-height: 2.3125em;
	&.button {
		padding-left: 0;
		padding-right: 0;
		padding-top: 0;
		padding-bottom: 0;
		text-align: center;
		line-height: 2.125em;
	}
}

span {
	&.prefix {
		background: #f2f2f2;
		border-color: #d9d9d9;
		border-right: none;
		color: #333333;
	}
	&.postfix {
		background: #f2f2f2;
		border-color: #cccccc;
		border-left: none;
		color: #333333;
	}
}



/* !  CUSTOM FORMS FIELDS
   ------------------------------------------------------------------------------------------------------*/

//
// Custom Form Variables
//


// We use these to control the basic form styles input styles
$custom-form-border-color:              #ccc !default;
$custom-form-border-size:               1px !default;
$custom-form-bg:                        #fff !default;
$custom-form-bg-disabled:               #ddd !default;
$custom-form-input-size:                16px !default;
$custom-form-check-color:               #222 !default;
$custom-form-check-size:                16px !default;
$custom-form-radio-size:                8px !default;
$custom-form-checkbox-radius:           0px !default;

// We use these to style the custom select form element.
$custom-select-bg:                      #fff !default;
$custom-select-fade-to-color:           #f3f3f3 !default;
$custom-select-border-color:            #ddd !default;
$custom-select-triangle-color:          #aaa !default;
$custom-select-triangle-color-open:     #222 !default;
$custom-select-height:                  emCalc(13px) + ($form-spacing * 1.5) !default;
$custom-select-margin-bottom:           emCalc(20px) !default;
$custom-select-font-color-selected:     #141414 !default;
$custom-select-disabled-color:          #888 !default;

// We use these to control the style of the custom select dropdown element.
$custom-dropdown-height:                200px !default;
$custom-dropdown-bg:                    #fff !default;
$custom-dropdown-border-color:          darken(#fff, 20%) !default;
$custom-dropdown-border-width:          1px !default;
$custom-dropdown-border-style:          solid !default;
$custom-dropdown-font-color:            #555 !default;
$custom-dropdown-font-size:             emCalc(14px) !default;
$custom-dropdown-color-selected:        #eeeeee !default;
$custom-dropdown-font-color-selected:   #000 !default;
$custom-dropdown-shadow:                0 2px 2px 0px rgba(0,0,0,0.1) !default;
$custom-dropdown-offset-top:            auto !default;
$custom-dropdown-list-padding:          emCalc(4px) !default;
$custom-dropdown-default-float-padding: emCalc(6px) !default;
$custom-dropdown-opposite-padding:      emCalc(38px) !default;
$custom-dropdown-list-item-min-height:  emCalc(24px) !default;
$custom-dropdown-width-small:           134px !default;
$custom-dropdown-width-medium:          254px !default;
$custom-dropdown-width-large:           434px !default;

// We decided not to make a mixin for the custom forms because
// they rely on a very specific class naming structure.
// We may look at updating this in the future.
@mixin custom-form-input($radius:0px, $mark-size:0px) {
  @include border-radius($radius);
  padding: (($custom-form-input-size - $mark-size) / 2) - $custom-form-border-size;
}

// Only include these classes if the variable is true, otherwise they'll be left out.

  /* Custom Checkbox and Radio Inputs */
  form.custom {

    .hidden-field {
      margin-left: -99999px;
      position: absolute;
      visibility: hidden;
    }

    .custom {
      display: inline-block;
      width: $custom-form-input-size;
      height: $custom-form-input-size;
      position: relative;
      vertical-align: middle;
      border: solid $custom-form-border-size $custom-form-border-color;
      background: $custom-form-bg;

      &.checkbox {
        @include custom-form-input($radius:$custom-form-checkbox-radius, $mark-size:$custom-form-check-size);
      }

      &.radio {
        @include custom-form-input($radius:1000px, $mark-size:$custom-form-radio-size);
      }

      &.checkbox {
        &:before {
          content: "";
          display: block;
          font-size: $custom-form-check-size;
          color: $custom-form-bg;
        }
      }

      &.radio.checked {
        &:before {
          content: "";
          display: block;
          width: $custom-form-radio-size;
          height: $custom-form-radio-size;
          @include border-radius(1000px);
          background: $custom-form-check-color;
          position: relative;
        }
      }

      &.checkbox.checked {
        &:before {
          content: "\00d7";
          color: $custom-form-check-color;
          position: absolute;
          top: -50%;
          left: 50%;
          margin-top: 4px;
          margin-left: -5px;
        }
      }
    }
  }

  /* Custom Select Options and Dropdowns */
  form.custom {
    .custom.dropdown {
      display: block;
      position: relative;
      top: 0;
      height: $custom-select-height;
      margin-bottom: $custom-select-margin-bottom;
      margin-top: 0px;
      padding: 0px;
      width: 100%;
      background: $custom-dropdown-bg;
      background: -moz-linear-gradient(top, $custom-dropdown-bg 0%, $custom-select-fade-to-color 100%);
      background: -webkit-linear-gradient(top, $custom-dropdown-bg 0%,$custom-select-fade-to-color 100%);
      background: linear-gradient(to bottom, $custom-dropdown-bg 0%,$custom-select-fade-to-color 100%);
      -webkit-box-shadow: none;
      box-shadow: none;
      font-size: $custom-dropdown-font-size;
      vertical-align: top;

      ul {
        overflow-y: auto;
        max-height: $custom-dropdown-height;
      }

      .current {
        cursor:default;
        white-space: nowrap;
        line-height: $custom-select-height - emCalc(1px);
        color: $input-font-color;
        text-decoration: none;
        overflow: hidden;
        display: block;
        margin-left: $form-spacing / 2;
        margin-right: $custom-select-height;
      }

      .selector {
        cursor:default;
        position: absolute;
        width: $form-spacing * 2.5;
        height: $custom-select-height;
        display: block;
        right: 0;
        top: 0;
        &:after {
          content: "";
          display: block;
          @include css-triangle(5px, $custom-select-triangle-color, top);
          position: absolute;
          left: ($form-spacing * 2.5) / 2 - emCalc(5px);
          top: 50%;
          margin-top: -3px;
        }
      }

      &:hover, &.open {
        a.selector {
          &:after { @include css-triangle(5px, $custom-select-triangle-color-open, top); }
        }
      }

      .disabled {
        color: $custom-select-disabled-color;
        &:hover {
          background: transparent;
          color: $custom-select-disabled-color;
          &:after { display: none; }
        }
      }

      &.open ul {
        display: block;
        z-index: 10;
        min-width:100%;
        @include box-sizing(content-box);
      }

      &.small { max-width: $custom-dropdown-width-small; }
      &.medium { max-width: $custom-dropdown-width-medium; }
      &.large { max-width: $custom-dropdown-width-large; }
      &.expand { width: 100% !important; }

      &.open.small ul { min-width: $custom-dropdown-width-small; @include box-sizing(border-box); }
      &.open.medium ul { min-width: $custom-dropdown-width-medium; @include box-sizing(border-box); }
      &.open.large ul { min-width: $custom-dropdown-width-large; @include box-sizing(border-box); }
    }

    .custom.dropdown ul {
      position: absolute;
      width: auto;
      display: none;
      margin: 0;
      left: -$input-border-width;
      top: $custom-dropdown-offset-top;
      -webkit-box-shadow: $custom-dropdown-shadow;
      box-shadow: $custom-dropdown-shadow;
      margin: 0;
      padding: 0;
      background: $custom-dropdown-bg;
      border: $custom-dropdown-border-style $custom-dropdown-border-width $custom-dropdown-border-color;
      font-size: $em-base;

      li {
        color: $custom-dropdown-font-color;
        font-size: $custom-dropdown-font-size;
        cursor: pointer;
        padding-top: $custom-dropdown-list-padding;
        padding-bottom: $custom-dropdown-list-padding;
        padding-left: $custom-dropdown-default-float-padding;
        padding-right: $custom-dropdown-opposite-padding;
        min-height: $custom-dropdown-list-item-min-height;
        line-height: $custom-dropdown-list-item-min-height;
        margin: 0;
        white-space: nowrap;
        list-style: none;

        &.selected {
          background: $custom-dropdown-color-selected;
          color: $custom-dropdown-font-color-selected;
        }
        &:hover {
          background-color: darken($custom-dropdown-color-selected, 4%);
          color: $custom-dropdown-font-color-selected;
        }
        &.selected:hover {
          background: $custom-dropdown-color-selected;
          cursor: pointer;
          color: $custom-dropdown-font-color-selected;
        }
      }

      &.show { display: block; }
    }

    /* Custom input, disabled */
    .custom.disabled { background: $custom-form-bg-disabled; }
  }


